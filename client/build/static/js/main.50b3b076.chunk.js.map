{"version":3,"sources":["Components/js/UserContext.js","Components/js/TradingView/TradingView-MainChart.js","Components/js/TradingView/TradingView-Financials.js","Components/js/TradingView/TradingView-Profile.js","Components/js/TradingView/TradingView-TickerTape.js","Components/js/Notes.js","Components/js/Home.js","Components/js/Validation.js","Components/js/LoginNavbar.js","Components/js/Login.js","Components/js/Register.js","Components/js/Watchlist.js","Components/js/TestPage.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","Chart","props","document","createElement","console","log","theme","id","className","symbol","name","locale","autosize","BarStyles","HEIKIN_ASHI","studies","indicators","Financials","script","width","visualViewport","valueOf","useEffect","Cookies","get","src","async","innerHTML","JSON","stringify","getElementById","appendChild","Profile","TickerTape","useState","sessionStorage","getItem","email","password","authenticated","user","watchlist","parse","Array","from","newWatchlist","array","length","index","string","toUpperCase","Notes","pass","stock","setDocs","currentNotes","setCurrentNotes","getNotes","axios","post","then","res","data","forEach","element","Ticker","catch","err","note","setNote","type","value","placeholder","onChange","evt","target","onClick","map","removeNote","removeFunction","Home","useContext","setUser","indicatorString","setIndicatorString","setIndicators","indicatorsOn","data-toggle","data-target","class","href","validateFields","validator","isEmpty","ticker","market","isEmail","isLength","min","confirmPassword","equals","Navbar","aria-controls","aria-expanded","aria-label","Login","validateOnChange","error","setEmail","setPassword","successMsg","setSuccessMsg","failMsg","setFailMsg","submitCalled","setSubmitCalled","allFieldsValidated","setAllFieldsValidated","whatHappened","setWhatHappened","handleBlur","validationFunc","field","temp","handleChange","fieldVal","handleSubmit","preventDefault","emailError","validateEmail","passwordError","validatePassword","every","e","set","sameSite","expires","window","location","setTimeout","style","borderRadius","onSubmit","classnames","onBlur","onMouseDown","margin","Register","initialState","setName","setConfirmPassword","nameError","validateName","confirmPasswordError","validateConfirmPassword","registerFunction","n","p","cp","Watchlist","setTicker","run","setRun","setWatchlist","getWatchlist","tickerList","setTickerList","tickerArray","num","key","_id","removeStock","feedback","setFeedback","addToList","TestPage","App","setItem","useMemo","Provider","path","exact","to","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50b3b076.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\n\n\n\nexport const UserContext = createContext();\n\n\n","import React, { useEffect, useState } from 'react';\nimport TradingViewWidget, { Themes, BarStyles, HEIKIN_ASHI } from 'react-tradingview-widget'\n\nfunction Chart(props) {\n    const script = document.createElement('script');\n\n    \n\n   \n\n\n\n    console.log(\"Main chart \" + props.theme);\n    return (\n        \n        <section id=\"MainChart\">\n            <div>\n                <br/>\n                \n                <div className=\"tradingView\">\n                    <TradingViewWidget\n                        symbol={props.name}\n                        \n                        theme='dark'\n                        locale=\"en\"\n                        autosize\n                        BarStyles={HEIKIN_ASHI}\n                        studies={props.indicators}\n\n                    />\n\n                </div>\n                \n            </div>\n        </section>\n\n    );\n\n} export default Chart;","import React, { useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nfunction Financials(props) {\n    const script = document.createElement('script');\n    const width = visualViewport.width.valueOf() * 0.75;\n   \n    useEffect(() => {\n        const symbol = Cookies.get(\"currentStock\");\n        script.src = \"https://s3.tradingview.com/external-embedding/embed-widget-financials.js\"\n        script.async = true;\n\n        script.innerHTML = JSON.stringify({\n            \"symbol\": `${Cookies.get('currentStock')}`,\n            \"height\": \"500\",\n            \"width\": `${width}`,\n            \"locale\": \"en\",\n            \"dateRange\": \"12M\",\n            \"colorTheme\": \"dark\",\n            \"trendLineColor\": \"#37a6ef\",\n            \"underLineColor\": \"#E3F2FD\",\n            \"isTransparent\": false,\n            \"autosize\": true,\n            \"largeChartUrl\": \"\",\n            \"displayMode\": \"compact\"\n\n        })\n        document.getElementById(\"financialContainer\").appendChild(script);\n    }, []);\n\n\n\n    return (\n        <section id=\"Financials\">\n            <div id=\"financialContainer\">\n                <div className=\"tradingview-widget-container\" >\n                    <div className=\"tradingview-widget-container__widget\" >\n\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n\n} export default Financials;","import React, { useEffect, useState } from 'react';\nimport bootstrap from 'bootstrap';\nimport Cookies from 'js-cookie'\nfunction Profile(props) {\n    const script = document.createElement('script');\n    const width = visualViewport.width.valueOf() * 0.75; \n\n    \n    useEffect(() => {\n        const symbol = Cookies.get(\"currentStock\"); \n        console.log(symbol);\n        script.src = \"https://s3.tradingview.com/external-embedding/embed-widget-symbol-profile.js\"\n        script.async = true;\n        script.innerHTML = JSON.stringify({\n            \"symbol\": `${Cookies.get('currentStock')}`,\n            \"height\": \"300\",\n            \"width\": `${width}`,\n            \"locale\": \"en\",\n            \"dateRange\": \"12M\",\n            \"colorTheme\": \"dark\",\n            \"trendLineColor\": \"#37a6ef\",\n            \"underLineColor\": \"#E3F2FD\",\n            \"isTransparent\": false,\n            \"autosize\": true,\n            \"largeChartUrl\": \"\",\n            \"displayMode\": \"compact\"\n\n        })\n        document.getElementById(\"profileContainer\").appendChild(script);\n    }, []);\n\n\n\n    return (\n        <section id=\"Profile\">\n            <div id=\"profileContainer\" >\n                <div className=\"tradingview-widget-container\">\n                    <div className=\"tradingview-widget-container__widget\">\n\n                    </div>\n                </div>\n            </div>\n        </section>\n\n    );\n\n} export default Profile;","import React, { useEffect, useState } from 'react';\nimport Cookies from 'js-cookie'; \nimport axios from 'axios';\n\n\nfunction TickerTape() {\n\n\n    const [user, setUser] = useState({\n        name: sessionStorage.getItem('sessionName'),\n        email: sessionStorage.getItem('sessionEmail'),\n        password: sessionStorage.getItem('sessionPassword'),\n        authenticated: sessionStorage.getItem('sessionAuthenticated')\n    });\n\n    useEffect(() => {\n        console.log(user.name);\n\n\n\n        if (!Cookies.get('tickerList')) {\n            const script = document.createElement('script');\n\n            script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js'\n            script.async = true;\n            \n            /*\n\n            var array = new Array(sessionList.length);\n            for (let index = 0; index < sessionList.length; index++) {\n                var string = `NASDAQ:${Cookies.get('watchlist').[index].Ticker.toUpperCase()}`\n                array[index] = {\n\n                    \"proName\": string,\n                    \"title\": string\n                }\n\n            }\n           */\n\n            script.innerHTML = JSON.stringify({\n\n                \"symbols\": [\n                    { \"proName\": \"NASDAQ:AAPL\", \"title\": \"AAPL\" },\n                    { \"proName\": \"NYSE:PLTR\", \"title\": \"PLTR\" },\n                    { \"proName\": \"NASDAQ:TSLA\", \"title\": \"TSLA\" }],\n                \"showSymbolLogo\": true,\n                \"colorTheme\": \"dark\",\n                \"isTransparent\": false,\n                \"displayMode\": \"adaptive\",\n                \"locale\": \"en\"\n            })\n            document.getElementById(\"myContainer\").appendChild(script);\n        }\n\n        else {\n            console.log(`else{}`);\n            const script = document.createElement('script');\n\n            script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js'\n            script.async = true;\n\n            const watchlist = Cookies.get(\"tickerList\")\n            console.log (`stringified: ${watchlist}`) \n            \n\n            console.log(`parsed ${JSON.parse(watchlist)}`);\n\n            console.log(Array.from(watchlist))\n           \n            var newWatchlist = JSON.parse(watchlist);\n           \n            console.log(`this is the formed array ${Array.from(newWatchlist)}`); \n\n            newWatchlist = Array.from(newWatchlist); \n            \n            \n            var array = new Array(newWatchlist.length);\n            console.log(newWatchlist.length) ; \n        \n            for (let index = 0; index < newWatchlist.length; index++) {\n                var string = `${newWatchlist[index].toUpperCase()}`\n                array[index] = {\n                    \"proName\": string,\n                    \"title\": newWatchlist[index].toUpperCase()\n                }\n\n            }\n            console.log(`this is array: `);\n            console.log(array);\n\n            script.innerHTML = JSON.stringify({\n\n                \"symbols\": array,\n                \"showSymbolLogo\": true,\n                \"colorTheme\": \"dark\",\n                \"isTransparent\": false,\n                \"displayMode\": \"adaptive\",\n                \"locale\": \"en\"\n            })\n\n\n\n           \n\n            document.getElementById(\"myContainer\").appendChild(script);\n\n        }\n        \n\n\n\n\n\n\n\n\n    }, []);\n\n\n\n    return (\n        <div id=\"myContainer\">\n            <div className=\"tradingview-widget-container\">\n                <div className=\"tradingview-widget-container__widget\">\n\n                </div>\n            </div>\n        </div>\n    );\n\n} export default TickerTape;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport Cookies, { getJSON } from 'js-cookie';\nimport '../css/Notes.css'\n\nfunction Notes() {\n\n    const email = Cookies.get(\"email\");\n    const pass = Cookies.get(\"pass\");\n    const stock = Cookies.get(\"currentStock\");\n    const [docs, setDocs] = useState();\n    const [currentNotes, setCurrentNotes] = useState([]);\n\n    function addNoteFunction() {\n        axios.post(`/api/users/notes/add/${email}/${pass}/${stock}/${note}`).then((res) => {\n            console.log(res.data)\n        }).then(getNotes).catch((err) => {\n            console.log(err);\n        })\n    }\n    useEffect(() => {\n        getNotes();\n    }, [])\n\n    function getNotes() {\n        axios.post(`/api/users/notes/get/${email}/${pass}/${stock}`).then((res) => {\n            res.data.stock.forEach(element => {\n                if (element.Ticker === stock) {\n                    setCurrentNotes(element.Notes)\n                }\n            });\n\n            setDocs(res.data);\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n    function removeFunction(element) {\n\n        var removeNote = element; \n        console.log(`before api call ${removeNote}`)\n        axios.post(`/api/users/notes/remove/${email}/${pass}/${stock}/${removeNote}`).then((res) => {\n            console.log(`notes removeFunction api call res: ${res.data}`);\n        }).then(getNotes).catch((err) => {\n            console.log(`notes removeFunction api call err: ${err}`);\n        })\n    }\n\n\n    const [note, setNote] = useState('');\n    return (\n        <div className=\"container\" >\n            <div className=\"card col-sm-12 justify-content-center\" >\n                <div className=\"card-title\">\n                    {stock}\n                </div>\n                <div className=\"card-body\">\n                    <div className=\"from\">\n                        <div className=\"row justify-content-center\">\n                            <div className=\"input-text col-sm-10\">\n                                <input\n                                    type=\"text\"\n                                    name=\"Note\"\n                                    value={note.value}\n                                    placeholder={\"Enter Note Here\"}\n                                    className=\"form-control input-group-text bg-dark text-white\"\n                                    onChange={(evt) => { setNote(evt.target.value) }} />\n                            </div>\n                            <div className=\"btn btn-light col-sm-2\" type=\"submit\" onClick={addNoteFunction}>\n                                Add\n                            </div>\n\n\n\n                        </div>\n                    </div>\n                </div>\n\n                <div>\n                    <h3>\n                        <div className=\"notes-list\">\n                            <div className=\"list-group  list-group-flush\">\n                                {currentNotes.map((element) => {\n                                    return (\n                                        <div className=\"row  justify-content-center\">\n\n                                            <li className=\"list-group-item col-sm-10\">{element}</li>\n                                            <button className=\"btn btn-dark col-sm-2\" onClick={() => { removeFunction(element) }}>Remove</button>\n\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    </h3>\n                </div>\n\n            </div>\n        </div>\n\n\n    );\n\n\n\n} export default Notes; ","import React, { useEffect, useContext, useState } from \"react\";\nimport '../css/Home.css'\nimport { UserContext } from \"./UserContext\";\nimport MainChart from \"./TradingView/TradingView-MainChart\"\nimport Financials from \"./TradingView/TradingView-Financials\";\nimport Profile from \"./TradingView/TradingView-Profile\";\nimport TickerTape from \"./TradingView/TradingView-TickerTape\";\nimport Cookies from 'js-cookie';\nimport Notes from \"./Notes\";\n\nfunction Home() {\n    const stock = Cookies.get(\"currentStock\");\n    console.log(stock);\n    function changeIndicators() {\n        if (indicatorString === \"Indicators On\") {\n            setIndicators(indicatorsOn);\n            setIndicatorString(\"Indicators Off\");\n\n        }\n        else {\n            setIndicators('false');\n            setIndicatorString(\"Indicators On\");\n        }\n    }\n\n    \n    const { user, setUser } = useContext(UserContext);\n    var localUse = {\n        name: sessionStorage.getItem('sessionName'),\n        email: sessionStorage.getItem('sessionEmail'),\n        password: sessionStorage.getItem('sessionPassword'),\n        authenticated: sessionStorage.getItem('sessionAuthenticated')\n    }\n    console.log(`Home: sessionStorage: ${sessionStorage.getItem(\"sessionName\")}`)\n    console.log(`Home: sessionStorage: ${sessionStorage.getItem(\"sessionEmail\")}`)\n\n\n\n    const [indicatorString, setIndicatorString] = useState(\"Indicators On\");\n    const [indicators, setIndicators] = useState('false');\n    const indicatorsOn = [\"BB@tv-basicstudies\", \"MACD@tv-basicstudies\", \"MASimple@tv-basicstudies\"]\n    const [buttonColor, setButtonColor] = useState('btn btn-light');\n\n\n\n\n\n\n\n\n\n\n\n    return (\n        <div>\n\n\n\n            <div className=\"StickyNav\">\n                <nav className=\"navbar  navbar-expand-sm \">\n\n                    <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarMenu\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                        <ul className=\"navbar-nav \">\n                            <li class=\"nav-item active\">\n                                <a class=\"nav-link\" href=\"/watchlist\">Watchlist</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a href=\"#MainChart\" className=\"nav-link\">Chart</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a href=\"#Financials\" className=\"nav-link\">Financials</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a href=\"#Profile\" className=\"nav-link\">Profile</a>\n                            </li>\n\n                        </ul>\n                        <ul className=\"navbar-nav justify-content-end\">\n\n                            <li className=\"nav-item justify-content-end\">\n                                <div class=\"chartButtons\">\n                                    <div class=\"changeButton\">\n\n                                        <a className=\"nav-link\" onClick={changeIndicators}>{indicatorString}</a>\n\n                                    </div>\n                                </div>\n\n                            </li>\n\n                        </ul>\n                    </div>\n\n\n\n                </nav>\n\n                <TickerTape />\n            </div>\n\n\n\n\n\n\n\n\n            <MainChart name={stock} indicators={indicators} />\n\n\n\n\n            <div className=\"contain\">\n\n\n                <Financials name={stock} />\n\n            </div>\n\n\n            <div className=\"contain2\">\n                <Profile name={stock}  />\n            </div>\n            <div className=\"row\">\n                <div className=\"col-xl-6 justify-content-center\">\n                    <Notes />\n                </div>\n            </div>\n\n\n        </div>\n\n\n\n    );\n} export default Home; ","import validator from 'validator';\nimport React from 'react'\n/*\n * This class contains methods for validating fields using 'validator.js' library methods\n * The methods return error message if validation failed and false otherwise\n * You can use all supported validators and sanitizers of 'validator.js' libaray\n * See their docs here https://github.com/validatorjs/validator.js\n */\n\nclass ValidateFields {\n  \n  validateName(name){\n    if (validator.isEmpty(name)){\n      return \"Name is required\"\n    }\n    else {\n      return false; \n    }\n  }\n\n  validateTicker(ticker){\n    if (validator.isEmpty(ticker)){\n      return \"Ticker is required\"\n    }\n    else {\n      return false; \n    }\n  }\n\n  validateMarket(market){\n    const markets = ['NYSE', 'NASDAQ', 'TSX']\n  }\n\n  validateEmail(email) {\n    if (validator.isEmpty(email)) {\n      return 'Email is required';\n    } else if (!validator.isEmail(email)) {\n      return 'Invalid Email';\n    }\n    return false;\n  }\n\n  validatePassword(password) {\n    if (validator.isEmpty(password)) {\n      return 'Password is required';\n    } else if (!validator.isLength(password, { min: 8 })) {\n      return 'Password should be minimum 8 characters';\n    }\n    return false;\n  }\n  validateConfirmPassword(password, confirmPassword){\n    if (!validator.equals(password , confirmPassword)){\n      return \"Passwords must match\"; \n    }\n    else {\n      return false;\n    }\n  }\n}\n\n\n\nconst validateFields = new ValidateFields();\n\n// export the class instance, so we can import and use it anywhere\nexport { validateFields };","import '../css/Navbar.css';\n\nimport React from 'react'\nfunction Navbar() {\n  return (\n\n    <nav class=\"navbar navbar-expand-lg\" id=\"navbar\" >\n\n\n      <button class=\"navbar-toggler btn btn-primary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"true\" aria-label=\"Toggle navigation\">\n\n        <span class=\"navbar-toggler-icon\">Button</span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item active\">\n            <a class=\"nav-link\" href=\"/watchlist\">Watchlist</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"/login\">Login</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"/register\">Sign Up</a>\n          </li>\n\n\n\n        </ul>\n      </div>\n\n    </nav>\n\n\n\n\n\n  );\n} export default Navbar; ","import React, { Component, useContext, useEffect, useState } from 'react';\nimport { validateFields } from './Validation';\nimport classnames from 'classnames';\nimport { UserContext } from './UserContext';\nimport '../css/Login.css'\nimport axios from 'axios';\nimport { json } from 'body-parser';\nimport Navbar from './LoginNavbar';\nimport Cookies from 'js-cookie';\n\n\n\n\nfunction Login() {\n    const { user, setUser } = useContext(UserContext);\n    const [cookies, setCookies] = useState({})\n\n    \n\n\n\n\n    const callServer = false;\n\n\n    const [email, setEmail] = useState({\n        value: '',\n        validateOnChange: false,\n        error: ''\n    });\n\n    const [password, setPassword] = useState({\n        value: '',\n        validateOnChange: false,\n        error: ''\n    });\n\n    const [successMsg , setSuccessMsg] = useState() ; \n    const [failMsg , setFailMsg] = useState() ; \n\n\n    const [submitCalled, setSubmitCalled] = useState(false);\n    const [allFieldsValidated, setAllFieldsValidated] = useState(false);\n\n    const [whatHappened , setWhatHappened] = useState('not set yet');  \n\n    function loginFunction() {\n\n\n        console.log(`password.value before sending api request ${password.value}`)\n        console.log(`email.value before sending api request ${email.value}`)\n        axios.post(`/api/users/login/id/${email.value}/${password.value}`).then(res => {\n            if (res.data[0] === `access granted`) {\n                setWhatHappened(JSON.stringify(res.data))\n                setUser({\n                    name: res.data[1],\n                    email: email.value,\n                    password: password.value,\n                    authenticated: true\n                });\n                console.log(`access granted ${res.data[1]}`);\n                Cookies.set('name' , `${res.data[1]}` , { sameSite: 'strict' , expires : 1});\n                Cookies.set('email' , `${email.value}` , { sameSite: 'strict' , expires : 1});\n                Cookies.set('pass', `${password.value}` , {sameSite: 'strict' , expires: 1}) ; \n                setSuccessMsg('authenticated')\n                window.location.href = \"/watchlist\" ; \n                \n\n            }\n            else if (res.data === `incorrect password`){\n                setFailMsg('incorrect password'); \n            }\n           \n        }).catch((err) => {\n            console.log(err)\n            setFailMsg('oops something went wrong :('); \n        });\n\n\n        console.log(whatHappened);\n       \n\n\n\n\n\n\n    }\n\n\n\n\n\n\n    /*\n     * validates the field onBlur if sumbit button is not clicked\n     * set the validateOnChange to true for that field\n     * check for error\n     */\n    function handleBlur(validationFunc, evt) {\n        const field = evt.target.name;\n\n        if (field === 'email' && email.validateOnChange === false && submitCalled === false) {\n            var temp = {\n                value: email.value,\n                validateOnChange: true,\n                error: validationFunc(email.value)\n            }\n            setEmail(temp);\n        }\n        else if (field === 'password' && password.validateOnChange === false && submitCalled === false) {\n            var temp = {\n                value: password.value,\n                validateOnChange: true,\n                error: validationFunc(password.value)\n            }\n            setPassword(temp);\n        }\n\n        return;\n    }\n\n\n\n    /*\n     * update the value in state for that field\n     * check for error if validateOnChange is true\n     */\n    function handleChange(validationFunc, evt) {\n        console.log(`handle change called`)\n        const field = evt.target.name;\n        console.log(field);\n        const fieldVal = evt.target.value;\n        console.log(email.value);\n\n\n        if (field === 'email' && email.validateOnChange === true) {\n            console.log('opta')\n            var temp = {\n                value: fieldVal,\n                validateOnChange: email.validateOnChange,\n                error: validationFunc(fieldVal)\n            }\n            setEmail(temp)\n        }\n        else if (field === 'email' && email.validateOnChange === false) {\n            console.log('optb')\n            var temp = {\n\n                value: fieldVal,\n                validateOnChange: email.validateOnChange,\n                error: ''\n            }\n\n            setEmail(temp);\n        }\n        else if (field === 'password' && password.validateOnChange === true) {\n            console.log('optc')\n            var temp = {\n                value: fieldVal,\n                validateOnChange: email.validateOnChange,\n                error: validationFunc(fieldVal)\n            }\n            setPassword(temp)\n        }\n        else if (field === 'password' && password.validateOnChange === false) {\n            console.log('optd')\n            var temp = {\n                value: fieldVal,\n                validateOnChange: email.validateOnChange,\n                error: ''\n            }\n            setPassword(temp);\n        }\n\n\n\n    }\n\n\n\n\n\n    /*\n     * validate all fields\n     * check if all fields are valid if yes then submit the Form\n     * otherwise set errors for the feilds in the state\n     */\n    function handleSubmit(evt) {\n        console.log(\"handle submit called\");\n        evt.preventDefault();\n        // validate all fields\n        console.log(`${email.value}  ${password.value}`);\n        const emailError = validateFields.validateEmail(email.value);\n        const passwordError = validateFields.validatePassword(password.value);\n\n        if ([emailError, passwordError].every(e => e === false)) {\n            // no errors submit the form\n            console.log(`email error and pass word error are false`)\n            loginFunction(email.value, password.value);\n\n            // clear state and show all fields are validated\n            setAllFieldsValidated(true);\n            showAllFieldsValidated();\n        } else {\n            // update the state with errors\n\n            setEmail(email.value, true, emailError);\n            setPassword(password.value, true, passwordError);\n\n        }\n    }\n\n    function showAllFieldsValidated() {\n        setTimeout(() => {\n            setAllFieldsValidated(false);\n        }, 1500);\n    }\n\n    function moveToRegister() {\n        window.location.href = \"/Register/\"\n    }\n\n\n\n\n\n    return (\n        <div>\n            <Navbar />\n            <div className=\"form col-md-8 col-lg-6\">\n                <div className=\"card \" style={{ borderRadius: \"15px\" }}>\n\n                    <h4 className=\"card-title text-center\">{Login}</h4>\n\n\n                    <div className=\"card-body\">\n                        {allFieldsValidated && (\n                            <p className=\"text-success text-center\">\n                                Success, All fields are validated\n                            </p>\n                        )}\n\n                        {/* Form Starts Here */}\n                        <form onSubmit={evt => handleSubmit(evt)}>\n\n\n\n                            {/* Email field */}\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    value={email.value}\n                                    placeholder={\"Enter email here\"}\n                                    className={classnames(\n                                        'form-control',\n                                        { 'is-valid': email.error === false },\n                                        { 'is-invalid': email.error }\n                                    )}\n                                    onChange={evt =>\n                                        handleChange(validateFields.validateEmail, evt)\n                                    }\n                                    onBlur={evt =>\n                                        handleBlur(validateFields.validateEmail, evt)\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">{email.error}</div>\n                            </div>\n\n                            {/* Password field */}\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={password.value}\n                                    placeholder=\"Enter your password\"\n                                    className={classnames(\n                                        'form-control',\n                                        { 'is-valid': password.error === false },\n                                        { 'is-invalid': password.error }\n                                    )}\n                                    onChange={evt =>\n                                        handleChange(validateFields.validatePassword, evt)\n                                    }\n                                    onBlur={evt =>\n                                        handleBlur(validateFields.validatePassword, evt)\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">{password.error}</div>\n                            </div>\n\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary col-sm-2\"\n                                onMouseDown={() => setSubmitCalled(true)}>\n                                Login\n                            </button>\n\n                            <button className=\"btn btn-secondary col-sm-2\"\n                                onClick={moveToRegister} \n                                style={{ margin: '25px' }}>\n                                Sign Up\n                            </button>\n\n                            <div className=\"valid-feedback\">{successMsg}</div> \n                            <div className=\"invalid-feedback\">{failMsg}</div> \n\n\n\n\n\n\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport default Login;","import React, { Component, useContext, useState } from 'react';\nimport { validateFields } from './Validation';\nimport classnames from 'classnames';\nimport axios from 'axios';\nimport '../css/Register.css';\nimport Navbar from './LoginNavbar';\nimport Cookies from 'js-cookie'; \nimport { UserContext } from './UserContext';\n\n\n\n\n\n\nfunction Register() {\n\n    const { user, setUser } = useContext(UserContext);\n\n    const initialState = {\n        name: {\n            value: '',\n            validateOnChange: false,\n            error: ''\n        },\n        email: {\n            value: '',\n            validateOnChange: false,\n            error: ''\n        },\n        password: {\n            value: '',\n            validateOnChange: false,\n            error: ''\n        },\n        confirmPassword: {\n            value: \"\",\n            validateOnChange: false,\n            error: \"\"\n        },\n\n        submitCalled: false,\n        allFieldsValidated: false\n    };\n\n    const [name, setName] = useState({\n        value: '',\n        validateOnChange: false,\n        error: ''\n    });\n\n    const [email, setEmail] = useState({\n        value: '',\n        validateOnChange: false,\n        error: ''\n    });\n\n    const [password, setPassword] = useState({\n        value: '',\n        validateOnChange: false,\n        error: ''\n    });\n\n    const [confirmPassword, setConfirmPassword] = useState({\n        value: '',\n        validateOnChange: false,\n        error: ''\n    });\n\n    const [submitCalled, setSubmitCalled] = useState(false);\n    const [allFieldsValidated, setAllFieldsValidated] = useState(false);\n\n    function registerFunction(name, email, pass) {\n        var Ticker = \"AAPL\"\n        var Market = \"NASDAQ\"\n        var Notes = [\n            \"Buy\",\n            \"Sell\"\n        ]\n\n\n\n\n        console.log('register function called')\n        axios.post(`/api/users/register/newUser/${name}/${email}/${pass}/stock/${Ticker}/${Market}/Notes/${Notes}`).then(res => {\n            console.log(res);\n        }).catch((err) => {\n            console.log(err);\n        })\n\n        //const [user, setUser] = this.context; \n\n        //setUser({\n\n    }\n\n    /*\n     * validates the field onBlur if sumbit button is not clicked\n     * set the validateOnChange to true for that field\n     * check for error\n     */\n    function handleBlur(validationFunc, evt) {\n        const field = evt.target.name;\n\n        if (field === 'name' && name.validateOnChange === false && submitCalled === false) {\n            var temp = {\n                value: name.value,\n                validateOnChange: true,\n                error: validationFunc(name.value)\n            }\n            setName(temp);\n        }\n        else if (field === 'email' && email.validateOnChange === false && submitCalled === false) {\n            var temp = {\n                value: email.value,\n                validateOnChange: true,\n                error: validationFunc(email.value)\n            }\n            setEmail(temp);\n        }\n        else if (field === 'password' && password.validateOnChange === false && submitCalled === false) {\n            var temp = {\n                value: password.value,\n                validateOnChange: true,\n                error: validationFunc(password.value)\n            }\n            setPassword(temp);\n        }\n        else if (field === 'confirmPassword' && password.validateOnChange === false && submitCalled === false) {\n            var temp = {\n                value: password.value,\n                validateOnChange: true,\n                error: validationFunc(password.value, confirmPassword.value)\n            }\n            setPassword(temp);\n        }\n\n        return;\n    }\n\n    /*\n     * update the value in state for that field\n     * check for error if validateOnChange is true\n     */\n    function handleChange(validationFunc, evt) {\n        console.log(`handle change called`)\n        const field = evt.target.name;\n        console.log(field);\n        const fieldVal = evt.target.value;\n        console.log(email.value);\n\n        if (field === 'name' && name.validateOnChange === true) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: name.validateOnChange,\n                error: validationFunc(fieldVal)\n            }\n            setName(temp)\n        }\n        else if (field === 'name' && name.validateOnChange === false) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: name.validateOnChange,\n                error: ''\n            }\n\n            setName(temp);\n        }\n\n        else if (field === 'email' && email.validateOnChange === true) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: email.validateOnChange,\n                error: validationFunc(fieldVal)\n            }\n            setEmail(temp)\n        }\n        else if (field === 'email' && email.validateOnChange === false) {\n\n            var temp = {\n\n                value: fieldVal,\n                validateOnChange: email.validateOnChange,\n                error: ''\n            }\n            setEmail(temp);\n        }\n        else if (field === 'password' && password.validateOnChange === true) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: password.validateOnChange,\n                error: validationFunc(fieldVal)\n            }\n            setPassword(temp)\n        }\n        else if (field === 'password' && password.validateOnChange === false) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: password.validateOnChange,\n                error: ''\n            }\n            setPassword(temp);\n        }\n        else if (field === 'confirmPassword' && confirmPassword.validateOnChange === true) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: confirmPassword.validateOnChange,\n                error: validationFunc(password.value, fieldVal)\n            }\n            setConfirmPassword(temp)\n        }\n        else if (field === 'confirmPassword' && confirmPassword.validateOnChange === false) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: confirmPassword.validateOnChange,\n                error: ''\n            }\n            setConfirmPassword(temp);\n        }\n\n    }\n\n\n\n\n\n    /*\n     * validate all fields\n     * check if all fields are valid if yes then submit the Form\n     * otherwise set errors for the feilds in the state\n     */\n    function handleSubmit(evt) {\n        evt.preventDefault();\n        // validate all fields\n        console.log('handle submit called'); \n\n        const nameError = validateFields.validateName(name.value);\n        const emailError = validateFields.validateEmail(email.value);\n        const passwordError = validateFields.validatePassword(password.value);\n        const confirmPasswordError = validateFields.validateConfirmPassword(password.value, confirmPassword.value);\n        if ([nameError, emailError, passwordError, confirmPasswordError].every(e => e === false)) {\n            console.log(\"no errors found before submission\")\n            // no errors submit the form\n            registerFunction(name.value, email.value, password.value);\n            Cookies.set(\"name\" , name.value); \n            Cookies.set(\"email\" , email.value); \n            Cookies.set(\"pass\" , password.value); \n\n\n\n            // clear state and show all fields are validated\n            setName(initialState.email);\n            setEmail(initialState.email);\n            setPassword(initialState.password);\n            setConfirmPassword(initialState.confirmPassword);\n            setSubmitCalled(false);\n            setAllFieldsValidated(true)\n            showAllFieldsValidated();\n\n            window.location.href = \"/watchlist\"\n\n        } else {\n            // update the state with errors\n\n            var n = {\n                value: name.value,\n                validateOnChange: true,\n                error: nameError\n            }\n            setName(n)\n            var e = {\n                value: email.value,\n                validateOnChange: true,\n                error: emailError\n            }\n            setEmail(e)\n            var p = {\n                value: password.value,\n                validateOnChange: true,\n                error: passwordError\n            }\n            setPassword(p)\n            var cp = {\n                value: confirmPassword.value,\n                validateOnChange: true,\n                error: confirmPasswordError\n            }\n            setConfirmPassword(cp)\n        }\n\n    }\n\n    function showAllFieldsValidated() {\n        setTimeout(() => {\n            setAllFieldsValidated(false);\n        }, 1500);\n    }\n\n    function moveToLogin() {\n        window.location.href = \"/login/\"\n    }\n\n\n\n\n\n\n\n    return (\n        <div>\n\n            <Navbar />\n            <div className=\"Form col-md-8 col-lg-6\">\n                <div className=\"card\">\n\n                    <h4 className=\"card-title text-center\">Sign Up</h4>\n\n\n                    <div className=\"card-body\">\n                        {allFieldsValidated && (\n                            <p className=\"text-success text-center\">\n                                Success, All fields are validated\n                            </p>\n                        )}\n\n                        {/* Form Starts Here */}\n                        <form onSubmit={evt => handleSubmit(evt)}>\n\n                            {/* Name field */}\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    name=\"name\"\n                                    value={name.value}\n                                    placeholder=\"Enter your name\"\n                                    className={classnames(\n                                        'form-control',\n                                        { 'is-valid': name.error === false },\n                                        { 'is-invalid': name.error }\n                                    )}\n                                    onChange={evt =>\n                                        handleChange(validateFields.validateName, evt)\n                                    }\n                                    onBlur={evt =>\n                                        handleBlur(validateFields.validateName, evt)\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">{name.error}</div>\n                            </div>\n\n                            {/* Email field */}\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    value={email.value}\n                                    placeholder=\"Enter your email\"\n                                    className={classnames(\n                                        'form-control',\n                                        { 'is-valid': email.error === false },\n                                        { 'is-invalid': email.error }\n                                    )}\n                                    onChange={evt =>\n                                        handleChange(validateFields.validateEmail, evt)\n                                    }\n                                    onBlur={evt =>\n                                        handleBlur(validateFields.validateEmail, evt)\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">{email.error}</div>\n                            </div>\n\n                            {/* Password field */}\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={password.value}\n                                    placeholder=\"Enter your password\"\n                                    className={classnames(\n                                        'form-control',\n                                        { 'is-valid': password.error === false },\n                                        { 'is-invalid': password.error }\n                                    )}\n                                    onChange={evt =>\n                                        handleChange(validateFields.validatePassword, evt)\n                                    }\n                                    onBlur={evt =>\n                                        handleBlur(validateFields.validatePassword, evt)\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">{password.error}</div>\n                            </div>\n                            {/* ConfirmPassword field */}\n                            <div className=\"form-group\">\n\n                                <input\n                                    type=\"password\"\n                                    name=\"confirmPassword\"\n                                    value={confirmPassword.value}\n                                    placeholder=\"Confirm\"\n                                    className={classnames(\n                                        'form-control',\n                                        { 'is-valid': confirmPassword.error === false },\n                                        { 'is-invalid': confirmPassword.error }\n                                    )}\n                                    onChange={evt =>\n                                        handleChange(validateFields.validateConfirmPassword, evt)\n                                    }\n                                    onBlur={evt =>\n                                        handleBlur(validateFields.validateConfirmPassword, evt)\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">{confirmPassword.error}</div>\n                            </div>\n\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary col-sm-2\"\n                                onMouseDown={() => handleSubmit}>\n                                Sign Up\n                            </button>\n\n                            <div className=\"btn btn-secondary col-sm-2\"\n                                onClick={moveToLogin}\n                                style={{ margin: '25px' }}>\n                                Login\n                            </div>\n\n\n\n\n\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default Register;","\nimport axios from 'axios';\nimport Navbar from './LoginNavbar';\n\nimport React, { useContext, useState, useEffect, map } from 'react'\n\nimport Cookies from 'js-cookie';\nimport '../css/Watchlist.css';\nfunction Watchlist() {\n\n    var data = (['test 1', 'test 2']);\n\n\n\n\n    const [ticker, setTicker] = useState('');\n    const [run, setRun] = useState(0);\n\n    const [user, setUser] = useState({\n        name: sessionStorage.getItem('sessionName'),\n        email: sessionStorage.getItem('sessionEmail'),\n        password: sessionStorage.getItem('sessionPassword'),\n        authenticated: sessionStorage.getItem('sessionAuthenticated')\n    });\n\n    const [watchlist, setWatchlist] = useState([]);\n\n\n    useEffect(() => {\n        getWatchlist()\n    }, [])\n\n\n    function getWatchlist() {\n        console.log(`get watchlist running`);\n\n        axios.post(`/api/users/watchlist/id/${Cookies.get(\"email\")}/${Cookies.get(\"pass\")}`).then((res) => {\n            if (res) {\n                setWatchlist(res.data)\n                console.log(`user.name ${Cookies.get(\"name\")}`)\n                console.log(` This is the res.data: ${JSON.stringify(res.data)}`)\n                console.log(\"setting watchlist to data\")\n                Cookies.set(\"watchlist\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n\n\n        console.log(`run added ${run}`);\n\n\n    }\n    const [tickerList, setTickerList] = useState();\n\n    useEffect(() => {\n        var tickerArray = [];\n        setTickerList(watchlist.map((element, num) => {\n            console.log(\"setTickerList is running\")\n            tickerArray[num] = element.Ticker;\n            return (\n                <div className=\"row justify-content-center\">\n                    <a className=\"list-group-item col-sm-8\" key={element._id} onClick={() => {\n                        console.log(\"selectStock: \");\n                        Cookies.set('currentStock', `${element.Ticker.toUpperCase()}`, { sameSite: 'strict', expires: 1 })\n                        console.log(\"current stock: \" + JSON.stringify(Cookies.get(\"currentStock\")));\n                        window.location.href = '/home'\n\n                    }}>\n                        <div>\n                            {element.Ticker.toUpperCase()}\n                        </div>\n                    </a>\n                    <button className=\"btn btn-dark col-sm-2\" onClick={() => { removeFunction(element) }}>Remove</button>\n                </div>\n            )\n        }))\n\n        Cookies.set('tickerList', JSON.stringify(tickerArray));\n\n    }, [watchlist])\n\n    function removeFunction(element) {\n        var removeStock = element.Ticker \n        console.log(`this is remove stock ${removeStock}`)\n        axios.post(`/api/users/watchlist/remove/${Cookies.get(\"email\")}/${Cookies.get(\"pass\")}/${removeStock}`).then((res)=>{\n            console.log(res.data); \n        }).then(getWatchlist).catch((err)=>{\n            console.log(err); \n        })\n    }\n\n    const [feedback, setFeedback] = useState(\"\");\n\n    function addToList() {\n        console.log(ticker);\n        axios.post(`/api/users/watchlist/add/${ticker}/${Cookies.get(\"email\")}/${Cookies.get(\"pass\")}`).then((res) => {\n            console.log(res)\n            setFeedback(res.data)\n\n        }).then(getWatchlist).catch((err) => {\n            console.log(err)\n        })\n\n\n        setRun(run + 1);\n\n\n    }\n\n    function handleSubmit(props) {\n        props.preventDefault();\n        console.log(`${ticker} ${Cookies.get(\"email\")} ${Cookies.get(\"pass\")}`)\n\n        addToList();\n    }\n\n\n\n\n\n\n    return (\n\n\n\n\n        <div>\n            <Navbar />\n\n\n\n            <div className=\"row\">\n                <div className=\"card col-sm-6\">\n                    <h3 class=\"card-title\">Watchlist</h3>\n                    <div className=\"form\" onSubmit={evt => handleSubmit(evt)}>\n                        <div className=\"form-group\">\n                            <div className=\"form-group\">\n                                <div className=\"input-text\">\n                                    <input\n                                        type=\"text\"\n                                        name=\"ticker\"\n                                        value={ticker.value}\n                                        placeholder={\"Enter Ticker Here\"}\n                                        className=\"form-control\"\n                                        onChange={(evt) => { setTicker(evt.target.value) }}\n                                    />\n                                </div>\n                                \n                                    {feedback}\n                            </div>\n                          \n                            <div className=\"btn btn-dark col-sm-4\"\n                                type=\"submit\"\n                                onClick={addToList}\n                                style={{ margin: '25px' }}>Add Stock\n                            </div>\n\n\n                            <ul className=\"col-7-md list-group list-group-flush\">\n                                {tickerList}\n                            </ul>\n\n                        </div>\n                    </div>\n                </div>\n            </div >\n        </div >\n\n\n\n    )\n\n\n} export default Watchlist; ","import Notes from './Notes'; \nimport React from 'react'\nfunction TestPage() {\n    return   <Notes/> \n\n} export default TestPage; ","import Home from './Components/js/Home';\nimport Login from './Components/js/Login';\nimport Register from './Components/js/Register';\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { UserContext } from './Components/js/UserContext';\nimport React, { useState, useMemo, useEffect } from 'react';\nimport './App.css';\nimport Watchlist from './Components/js/Watchlist';\nimport TestPage from './Components/js/TestPage';\nimport bootstrap from  '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nfunction App() {\n\n  const [user, setUser] = useState({\n    name: \"default\",\n    email: \"default@email.com\",\n    password: \"password\",\n    authenticated: false\n\n  });\n  useEffect (()=>{sessionStorage.setItem(\"sessionName\", user.name)} , [user.name])\n  useEffect (()=>{sessionStorage.setItem(\"sessionEmail\", user.email)} , [user.email])\n  useEffect (()=>{sessionStorage.setItem(\"sessionPassword\", user.password)} , [user.password])\n  useEffect (()=>{sessionStorage.setItem(\"sessionAuthenticated\", user.authenticated)} , [user.authenticated])\n  \n \n\n  const value = useMemo(() => ({ user, setUser }), [user, setUser])\n\n\n  return (\n    <UserContext.Provider value={value}>\n      <div className=\"App\">\n\n      \n        <BrowserRouter>\n          <Switch>\n          <Route path=\"/\" exact >\n              <Redirect to=\"/register\" />\n            </Route>\n            <Route path=\"/home\" exact >\n              <Home />\n            </Route>\n            <Route path=\"/login\" exact >\n              <Login />\n            </Route>\n            <Route path=\"/register\" exact >\n              <Register/>\n            </Route>\n            <Route path=\"/watchlist\" exact> \n              <Watchlist/> \n            </Route>\n            <Route path=\"/test-page\" exact> \n              <TestPage/> \n            </Route>\n          </Switch>\n\n        </BrowserRouter>\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}